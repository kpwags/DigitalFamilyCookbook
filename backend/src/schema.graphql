# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  changePassword(id: ID!, currentPassword: String!, password: String!): User!
  createCategory(name: String!): Category!
  createInvitationCode(code: String!): InvitationCode!
  createMeat(name: String!): Meat!
  deleteCategory(id: ID!): Category
  deleteInvitationCode(id: ID!): InvitationCode
  deleteMeat(id: ID!): Meat
  login(email: String!, password: String!): User!
  logout: SuccessMessage
  requestPasswordReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!): User
  signup(
    email: String!
    username: String!
    password: String!
    name: String!
    bio: String
    invitationCode: String!
    image: String
    largeImage: String
  ): User!
  updateCategory(id: ID!, name: String): Category!
  updateInvitationCode(id: ID!, code: String): InvitationCode!
  updateMeat(id: ID!, name: String): Meat!
  updateUser(
    id: ID!
    name: String!
    username: String!
    email: String!
    bio: String
    image: String
    largeImage: String
  ): User!
}

type Query {
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput): [Category]!
  category(where: CategoryWhereUniqueInput!): Category
  invitationCode(where: InvitationCodeWhereUniqueInput!): InvitationCode
  invitationCodes: [InvitationCode]
  me: User
  meat(where: MeatWhereUniqueInput!): Meat
  meats(where: MeatWhereInput, orderBy: MeatOrderByInput): [Meat]!
  user(where: UserWhereUniqueInput!): User
}

type User {
  id: ID!
  name: String!
  username: String!
  email: String!
  bio: String
  image: String
  largeImage: String
  permissions: [Permission!]!
}
